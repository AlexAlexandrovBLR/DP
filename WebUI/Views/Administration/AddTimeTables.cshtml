@model BusStation.Services.Models.AddTimeTableViewModel


@{
    ViewBag.Title = "Добавление расписаний маршрутов";
}

<h2 align="center">Добавление расписаний маршрутов</h2>

<form class="form-horizontal" id="addTimeTableForm">
    <div id="dynamicFields">
        
        <div class="well" id="fields">
            <div class="form-group">
                @Html.LabelFor(l => l.TimeTables[0].RouteId, new {@class = "col-md-2 control-label"})
                <div class="col-md-2">
                    @Html.DropDownListFor(t => t.TimeTables[0].RouteId, Model.RoutesList, new {@class = "form-control"})
                </div>
                @Html.LabelFor(l => l.TimeTables[0].DepartureDate, new {@class = "col-md-2 control-label"})
                <div class="col-md-2">
                    @Html.ValidationMessageFor(t => t.TimeTables[0].DepartureDate)
                    @Html.TextBoxFor(t => t.TimeTables[0].DepartureDate, new {@class = "form-control", type = "date"})
                </div>
                @Html.LabelFor(l => l.TimeTables[0].DepartureTime, new {@class = "col-md-2 control-label", min = DateTime.Now.ToString("yyyy-MM-dd")})
                <div class="col-md-2">
                    @Html.ValidationMessageFor(t => t.TimeTables[0].DepartureTime)
                    @Html.TextBoxFor(t => t.TimeTables[0].DepartureTime, new {@class = "form-control", type = "time"})
                </div>
            </div>
        </div>
    </div>
   

    <button type="button" class="btn btn-default" id="addField" >Добавить </button>
    <button type="button" class="btn btn-danger" id="removeField" disabled="disabled">Удалить </button>

    <button type="button" class="btn btn-info" style="float: right" id="addTimeTable">Сохранить</button>
</form>


@section scripts
{
    
    <script>
        var originalFields;
        var i = 1;
        $(document).ready(function () {
            originalFields = $('#dynamicFields').clone();  

            $('#TimeTables_0__DepartureDate').val(new Date().toJSON().slice(0, 10));
        });

        $('#addField').on('click',
            function() {
                var fields = $(originalFields).clone();
                addIndexToAttribute(fields);
                $('#dynamicFields').append(fields.html());
                $('#TimeTables_'+(i-1)+'__DepartureDate').val(new Date().toJSON().slice(0, 10));

                $('form').data('validator', null);
                $.validator.unobtrusive.parse($('form'));

                $('#removeField').removeAttr('disabled');
            });

        $('#removeField').on('click',
            function () {

                var fields = $('#dynamicFields .well');
                var length = fields.length;

                if (fields.length > 1) {
                    $(fields).last().remove();
                    length--;
                }
                if (fields.length ===2) {
                    $('#removeField').attr('disabled', 'disabled');
                }

                $('form').data('validator', null);
                $.validator.unobtrusive.parse($('form'));
            });

        function addIndexToAttribute(originalFields) {
            originalFields.find('input, select').each(function () {

                var namePaths = $(this).attr('name').split(/\[[0 - 9]]/);
                var idPaths = $(this).attr('id').split(/[0-9]/);


                $(this).attr('name', namePaths[0] + '[' + i + ']' + namePaths[1]);
                $(this).attr('id', idPaths[0] + i + idPaths[1]);
            });

            i++;
        }

        $('#addTimeTable').on('click',
            function () {
                if ($('#addTimeTableForm').valid()) {
                    $.ajax({
                        url: '/Administration/AddTimeTables',
                        method: 'POST',
                        data: $('#addTimeTableForm').serialize(),
                        success: function(data) {
                            if (data.Successed) {
                                alertify.success('Данные успешно сохранены', 2, function() { location.reload(); });
                            } else {
                                alertify.error('Данные не сохранены! ' + data.Message);
                            }
                        }
                    });
                }
            });

    </script>

}
